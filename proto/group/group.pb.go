// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.20.2
// source: proto/group/group.proto

package group

import (
	msg "im_message/proto/msg"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 添加好友
type AddFriendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromUid       int64                  `protobuf:"varint,1,opt,name=fromUid,proto3" json:"fromUid,omitempty"`
	ToUid         int64                  `protobuf:"varint,2,opt,name=toUid,proto3" json:"toUid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddFriendRequest) Reset() {
	*x = AddFriendRequest{}
	mi := &file_proto_group_group_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendRequest) ProtoMessage() {}

func (x *AddFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_group_group_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendRequest.ProtoReflect.Descriptor instead.
func (*AddFriendRequest) Descriptor() ([]byte, []int) {
	return file_proto_group_group_proto_rawDescGZIP(), []int{0}
}

func (x *AddFriendRequest) GetFromUid() int64 {
	if x != nil {
		return x.FromUid
	}
	return 0
}

func (x *AddFriendRequest) GetToUid() int64 {
	if x != nil {
		return x.ToUid
	}
	return 0
}

type AddFriendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"` // 返回创建的这个新群, 但是这个群还处于删除态, 不可发聊天消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddFriendResponse) Reset() {
	*x = AddFriendResponse{}
	mi := &file_proto_group_group_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendResponse) ProtoMessage() {}

func (x *AddFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_group_group_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendResponse.ProtoReflect.Descriptor instead.
func (*AddFriendResponse) Descriptor() ([]byte, []int) {
	return file_proto_group_group_proto_rawDescGZIP(), []int{1}
}

func (x *AddFriendResponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

// 处理好友申请
type HandleFriendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	GroupId       string                 `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	IsAgree       bool                   `protobuf:"varint,3,opt,name=isAgree,proto3" json:"isAgree,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandleFriendRequest) Reset() {
	*x = HandleFriendRequest{}
	mi := &file_proto_group_group_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandleFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleFriendRequest) ProtoMessage() {}

func (x *HandleFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_group_group_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleFriendRequest.ProtoReflect.Descriptor instead.
func (*HandleFriendRequest) Descriptor() ([]byte, []int) {
	return file_proto_group_group_proto_rawDescGZIP(), []int{2}
}

func (x *HandleFriendRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *HandleFriendRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *HandleFriendRequest) GetIsAgree() bool {
	if x != nil {
		return x.IsAgree
	}
	return false
}

type HandleFriendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandleFriendResponse) Reset() {
	*x = HandleFriendResponse{}
	mi := &file_proto_group_group_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandleFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleFriendResponse) ProtoMessage() {}

func (x *HandleFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_group_group_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleFriendResponse.ProtoReflect.Descriptor instead.
func (*HandleFriendResponse) Descriptor() ([]byte, []int) {
	return file_proto_group_group_proto_rawDescGZIP(), []int{3}
}

func (x *HandleFriendResponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

// 获取好友列表
type FriendListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FriendListRequest) Reset() {
	*x = FriendListRequest{}
	mi := &file_proto_group_group_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FriendListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendListRequest) ProtoMessage() {}

func (x *FriendListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_group_group_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendListRequest.ProtoReflect.Descriptor instead.
func (*FriendListRequest) Descriptor() ([]byte, []int) {
	return file_proto_group_group_proto_rawDescGZIP(), []int{4}
}

func (x *FriendListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type FriendListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []int64                `protobuf:"varint,1,rep,packed,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FriendListResponse) Reset() {
	*x = FriendListResponse{}
	mi := &file_proto_group_group_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FriendListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendListResponse) ProtoMessage() {}

func (x *FriendListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_group_group_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendListResponse.ProtoReflect.Descriptor instead.
func (*FriendListResponse) Descriptor() ([]byte, []int) {
	return file_proto_group_group_proto_rawDescGZIP(), []int{5}
}

func (x *FriendListResponse) GetList() []int64 {
	if x != nil {
		return x.List
	}
	return nil
}

// 获取群内的用户
type GroupUserListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupUserListRequest) Reset() {
	*x = GroupUserListRequest{}
	mi := &file_proto_group_group_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupUserListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupUserListRequest) ProtoMessage() {}

func (x *GroupUserListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_group_group_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupUserListRequest.ProtoReflect.Descriptor instead.
func (*GroupUserListRequest) Descriptor() ([]byte, []int) {
	return file_proto_group_group_proto_rawDescGZIP(), []int{6}
}

func (x *GroupUserListRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GroupUserListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []int64                `protobuf:"varint,1,rep,packed,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupUserListResponse) Reset() {
	*x = GroupUserListResponse{}
	mi := &file_proto_group_group_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupUserListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupUserListResponse) ProtoMessage() {}

func (x *GroupUserListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_group_group_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupUserListResponse.ProtoReflect.Descriptor instead.
func (*GroupUserListResponse) Descriptor() ([]byte, []int) {
	return file_proto_group_group_proto_rawDescGZIP(), []int{7}
}

func (x *GroupUserListResponse) GetList() []int64 {
	if x != nil {
		return x.List
	}
	return nil
}

// 获取用户的群列表
type UserGroupListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserGroupListRequest) Reset() {
	*x = UserGroupListRequest{}
	mi := &file_proto_group_group_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserGroupListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGroupListRequest) ProtoMessage() {}

func (x *UserGroupListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_group_group_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGroupListRequest.ProtoReflect.Descriptor instead.
func (*UserGroupListRequest) Descriptor() ([]byte, []int) {
	return file_proto_group_group_proto_rawDescGZIP(), []int{8}
}

func (x *UserGroupListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UserGroupListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []string               `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserGroupListResponse) Reset() {
	*x = UserGroupListResponse{}
	mi := &file_proto_group_group_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserGroupListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGroupListResponse) ProtoMessage() {}

func (x *UserGroupListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_group_group_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGroupListResponse.ProtoReflect.Descriptor instead.
func (*UserGroupListResponse) Descriptor() ([]byte, []int) {
	return file_proto_group_group_proto_rawDescGZIP(), []int{9}
}

func (x *UserGroupListResponse) GetList() []string {
	if x != nil {
		return x.List
	}
	return nil
}

// 获取消息页面 群组信息列表
type MessageGroupInfoListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageGroupInfoListRequest) Reset() {
	*x = MessageGroupInfoListRequest{}
	mi := &file_proto_group_group_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageGroupInfoListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageGroupInfoListRequest) ProtoMessage() {}

func (x *MessageGroupInfoListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_group_group_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageGroupInfoListRequest.ProtoReflect.Descriptor instead.
func (*MessageGroupInfoListRequest) Descriptor() ([]byte, []int) {
	return file_proto_group_group_proto_rawDescGZIP(), []int{10}
}

func (x *MessageGroupInfoListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type MessageGroupInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`     // 群组id (group_user表)
	AliasName     string                 `protobuf:"bytes,2,opt,name=aliasName,proto3" json:"aliasName,omitempty"` // 备注 (group_user表)
	AvatarUrl     string                 `protobuf:"bytes,3,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"` // 头像 (group表, user表)
	LastMsg       *msg.ChatMsg           `protobuf:"bytes,4,opt,name=lastMsg,proto3" json:"lastMsg,omitempty"`     // 最后一条消息 (chat_msg表)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageGroupInfo) Reset() {
	*x = MessageGroupInfo{}
	mi := &file_proto_group_group_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageGroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageGroupInfo) ProtoMessage() {}

func (x *MessageGroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_group_group_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageGroupInfo.ProtoReflect.Descriptor instead.
func (*MessageGroupInfo) Descriptor() ([]byte, []int) {
	return file_proto_group_group_proto_rawDescGZIP(), []int{11}
}

func (x *MessageGroupInfo) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *MessageGroupInfo) GetAliasName() string {
	if x != nil {
		return x.AliasName
	}
	return ""
}

func (x *MessageGroupInfo) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *MessageGroupInfo) GetLastMsg() *msg.ChatMsg {
	if x != nil {
		return x.LastMsg
	}
	return nil
}

type MessageGroupInfoListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*MessageGroupInfo    `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageGroupInfoListResponse) Reset() {
	*x = MessageGroupInfoListResponse{}
	mi := &file_proto_group_group_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageGroupInfoListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageGroupInfoListResponse) ProtoMessage() {}

func (x *MessageGroupInfoListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_group_group_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageGroupInfoListResponse.ProtoReflect.Descriptor instead.
func (*MessageGroupInfoListResponse) Descriptor() ([]byte, []int) {
	return file_proto_group_group_proto_rawDescGZIP(), []int{12}
}

func (x *MessageGroupInfoListResponse) GetList() []*MessageGroupInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 群组创建
type CreateGroupChatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	GroupName     string                 `protobuf:"bytes,2,opt,name=groupName,proto3" json:"groupName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupChatRequest) Reset() {
	*x = CreateGroupChatRequest{}
	mi := &file_proto_group_group_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupChatRequest) ProtoMessage() {}

func (x *CreateGroupChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_group_group_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupChatRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupChatRequest) Descriptor() ([]byte, []int) {
	return file_proto_group_group_proto_rawDescGZIP(), []int{13}
}

func (x *CreateGroupChatRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateGroupChatRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type CreateGroupChatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupChatResponse) Reset() {
	*x = CreateGroupChatResponse{}
	mi := &file_proto_group_group_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupChatResponse) ProtoMessage() {}

func (x *CreateGroupChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_group_group_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupChatResponse.ProtoReflect.Descriptor instead.
func (*CreateGroupChatResponse) Descriptor() ([]byte, []int) {
	return file_proto_group_group_proto_rawDescGZIP(), []int{14}
}

func (x *CreateGroupChatResponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

// 为一个群组添加批量新成员
type AddGroupChatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromUid       int64                  `protobuf:"varint,1,opt,name=fromUid,proto3" json:"fromUid,omitempty"`    // 邀请者
	ToUid         []int64                `protobuf:"varint,2,rep,packed,name=toUid,proto3" json:"toUid,omitempty"` // 被邀请者
	GroupId       string                 `protobuf:"bytes,3,opt,name=groupId,proto3" json:"groupId,omitempty"`     // 群组id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddGroupChatRequest) Reset() {
	*x = AddGroupChatRequest{}
	mi := &file_proto_group_group_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddGroupChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupChatRequest) ProtoMessage() {}

func (x *AddGroupChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_group_group_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupChatRequest.ProtoReflect.Descriptor instead.
func (*AddGroupChatRequest) Descriptor() ([]byte, []int) {
	return file_proto_group_group_proto_rawDescGZIP(), []int{15}
}

func (x *AddGroupChatRequest) GetFromUid() int64 {
	if x != nil {
		return x.FromUid
	}
	return 0
}

func (x *AddGroupChatRequest) GetToUid() []int64 {
	if x != nil {
		return x.ToUid
	}
	return nil
}

func (x *AddGroupChatRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type AddGroupChatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cnt           int64                  `protobuf:"varint,1,opt,name=cnt,proto3" json:"cnt,omitempty"` // 返回成功邀请的人数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddGroupChatResponse) Reset() {
	*x = AddGroupChatResponse{}
	mi := &file_proto_group_group_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddGroupChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupChatResponse) ProtoMessage() {}

func (x *AddGroupChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_group_group_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupChatResponse.ProtoReflect.Descriptor instead.
func (*AddGroupChatResponse) Descriptor() ([]byte, []int) {
	return file_proto_group_group_proto_rawDescGZIP(), []int{16}
}

func (x *AddGroupChatResponse) GetCnt() int64 {
	if x != nil {
		return x.Cnt
	}
	return 0
}

var File_proto_group_group_proto protoreflect.FileDescriptor

var file_proto_group_group_proto_rawDesc = string([]byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x1a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x6d, 0x73, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x42, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x6f,
	0x6d, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d,
	0x55, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x11, 0x41, 0x64, 0x64,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x13, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x67, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x67, 0x72, 0x65, 0x65, 0x22, 0x30, 0x0a, 0x14, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x2b, 0x0a,
	0x11, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x12, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x30, 0x0a, 0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x15, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x2e, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x35, 0x0a, 0x1b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55,
	0x72, 0x6c, 0x12, 0x26, 0x0a, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x73,
	0x67, 0x52, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x22, 0x4b, 0x0a, 0x1c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x13,
	0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x55, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x28, 0x0a,
	0x14, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x63, 0x6e, 0x74, 0x32, 0xf8, 0x04, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x12, 0x17, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x41, 0x64, 0x64,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x1a, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x0d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x22, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x41, 0x64, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x12, 0x1a, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x41, 0x64,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x68, 0x61, 0x74, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2e, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_group_group_proto_rawDescOnce sync.Once
	file_proto_group_group_proto_rawDescData []byte
)

func file_proto_group_group_proto_rawDescGZIP() []byte {
	file_proto_group_group_proto_rawDescOnce.Do(func() {
		file_proto_group_group_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_group_group_proto_rawDesc), len(file_proto_group_group_proto_rawDesc)))
	})
	return file_proto_group_group_proto_rawDescData
}

var file_proto_group_group_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_group_group_proto_goTypes = []any{
	(*AddFriendRequest)(nil),             // 0: group.AddFriendRequest
	(*AddFriendResponse)(nil),            // 1: group.AddFriendResponse
	(*HandleFriendRequest)(nil),          // 2: group.HandleFriendRequest
	(*HandleFriendResponse)(nil),         // 3: group.HandleFriendResponse
	(*FriendListRequest)(nil),            // 4: group.FriendListRequest
	(*FriendListResponse)(nil),           // 5: group.FriendListResponse
	(*GroupUserListRequest)(nil),         // 6: group.GroupUserListRequest
	(*GroupUserListResponse)(nil),        // 7: group.GroupUserListResponse
	(*UserGroupListRequest)(nil),         // 8: group.UserGroupListRequest
	(*UserGroupListResponse)(nil),        // 9: group.UserGroupListResponse
	(*MessageGroupInfoListRequest)(nil),  // 10: group.MessageGroupInfoListRequest
	(*MessageGroupInfo)(nil),             // 11: group.MessageGroupInfo
	(*MessageGroupInfoListResponse)(nil), // 12: group.MessageGroupInfoListResponse
	(*CreateGroupChatRequest)(nil),       // 13: group.CreateGroupChatRequest
	(*CreateGroupChatResponse)(nil),      // 14: group.CreateGroupChatResponse
	(*AddGroupChatRequest)(nil),          // 15: group.AddGroupChatRequest
	(*AddGroupChatResponse)(nil),         // 16: group.AddGroupChatResponse
	(*msg.ChatMsg)(nil),                  // 17: msg.ChatMsg
}
var file_proto_group_group_proto_depIdxs = []int32{
	17, // 0: group.MessageGroupInfo.lastMsg:type_name -> msg.ChatMsg
	11, // 1: group.MessageGroupInfoListResponse.list:type_name -> group.MessageGroupInfo
	0,  // 2: group.GroupClient.AddFriend:input_type -> group.AddFriendRequest
	2,  // 3: group.GroupClient.HandleFriend:input_type -> group.HandleFriendRequest
	6,  // 4: group.GroupClient.GroupUserList:input_type -> group.GroupUserListRequest
	8,  // 5: group.GroupClient.UserGroupList:input_type -> group.UserGroupListRequest
	10, // 6: group.GroupClient.MessageGroupInfoList:input_type -> group.MessageGroupInfoListRequest
	15, // 7: group.GroupClient.AddGroupChat:input_type -> group.AddGroupChatRequest
	13, // 8: group.GroupClient.CreateGroupChat:input_type -> group.CreateGroupChatRequest
	4,  // 9: group.GroupClient.GetFriendListByUserId:input_type -> group.FriendListRequest
	1,  // 10: group.GroupClient.AddFriend:output_type -> group.AddFriendResponse
	3,  // 11: group.GroupClient.HandleFriend:output_type -> group.HandleFriendResponse
	7,  // 12: group.GroupClient.GroupUserList:output_type -> group.GroupUserListResponse
	9,  // 13: group.GroupClient.UserGroupList:output_type -> group.UserGroupListResponse
	12, // 14: group.GroupClient.MessageGroupInfoList:output_type -> group.MessageGroupInfoListResponse
	16, // 15: group.GroupClient.AddGroupChat:output_type -> group.AddGroupChatResponse
	14, // 16: group.GroupClient.CreateGroupChat:output_type -> group.CreateGroupChatResponse
	5,  // 17: group.GroupClient.GetFriendListByUserId:output_type -> group.FriendListResponse
	10, // [10:18] is the sub-list for method output_type
	2,  // [2:10] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_proto_group_group_proto_init() }
func file_proto_group_group_proto_init() {
	if File_proto_group_group_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_group_group_proto_rawDesc), len(file_proto_group_group_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_group_group_proto_goTypes,
		DependencyIndexes: file_proto_group_group_proto_depIdxs,
		MessageInfos:      file_proto_group_group_proto_msgTypes,
	}.Build()
	File_proto_group_group_proto = out.File
	file_proto_group_group_proto_goTypes = nil
	file_proto_group_group_proto_depIdxs = nil
}
